# Generated by Django 4.1.5 on 2023-02-04 22:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Citizenship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Гражданство',
                'verbose_name_plural': 'Гражданства',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Инвалидность',
                'verbose_name_plural': 'Инвалидности',
            },
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Семейное положение',
                'verbose_name_plural': 'Семейные положения',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[а-яА-Я]*$', 'Данное поле должно состоять исключительно из букв')], verbose_name='Имя')),
                ('surname', models.CharField(max_length=250, verbose_name='Фамилия')),
                ('father_name', models.CharField(max_length=250, verbose_name='Отчество')),
                ('birth_at', models.DateField(verbose_name='Дата рождения')),
                ('passport_series', models.CharField(max_length=10, verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator('[0-9]{7}', 'Данное поле должно состоять исключительно из 7 цифр')], verbose_name='Номер паспорта')),
                ('passport_issuer', models.CharField(max_length=250, verbose_name='Кем выдан')),
                ('passport_issue_at', models.DateField(verbose_name='Дата выдачи')),
                ('id_number', models.CharField(max_length=100, unique=True, verbose_name='Идентификационный номер')),
                ('current_live_address', models.CharField(max_length=250, verbose_name='Адрес фактического проживания')),
                ('home_phone_number', models.CharField(blank=True, default='', max_length=25, null=True, validators=[django.core.validators.RegexValidator('^[0-9\\-\\+]{13}$', 'Данное поле должно сосоять из номера телефона начиная с +')], verbose_name='Телефон домашний')),
                ('mobile_phone_number', models.CharField(blank=True, default='', max_length=25, null=True, validators=[django.core.validators.RegexValidator('^[0-9\\-\\+]{13}$', 'Данное поле должно сосоять из номера телефона начиная с +')], verbose_name='Телефон мобильный')),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='Электронная почта')),
                ('work_place', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Место работы')),
                ('work_occupation', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Должность')),
                ('is_retired', models.BooleanField(verbose_name='Пенсионер')),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ежемесячный доход')),
                ('birth_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='birth_city', to='main.city', verbose_name='Место рождения')),
                ('citizenship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.citizenship', verbose_name='Гражданство')),
                ('city_of_residence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_of_residence', to='main.city', verbose_name='Город прописки')),
                ('current_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_city', to='main.city', verbose_name='Город фактического проживания')),
                ('disability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.disability', verbose_name='Инвалидность')),
                ('marital_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.maritalstatus', verbose_name='Семейное положение')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'unique_together': {('first_name', 'surname', 'father_name')},
            },
        ),
    ]
